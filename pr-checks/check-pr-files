#!/usr/bin/env python
from os.path import dirname, abspath
from optparse import OptionParser
import sys, re
from commands import getstatusoutput as run_cmd
CMS_BOT_DIR = dirname(dirname(abspath(sys.argv[0])))

def check_commits_files(repo, pr):
  status_map = {'A':'Added',
                'C':'Copied',
                'D':'Deleted',
                'M':'Modified',
                'R':'Renamed',
                'T':'Type',
                'U':'Unmerged',
                'X':'Unknown'}
  invalid_status=[('A', 'D'), ('C', 'D'), ('R', 'D'), ('X', 'X'), ('U', 'U')]

  all_ok = False
  e, o = run_cmd('%s/process-pull-request -a -c -r %s %s' % (CMS_BOT_DIR, repo, pr))
  if e: 
    print o
    return all_ok
  data = {}
  for c in o.split('\n'):
    e , o = run_cmd('git diff-tree --no-commit-id --name-status -r %s' % c)
    if e:
      print o
      return all_ok
    for l in [re.sub("\s+"," ",x.strip()) for x in o.split('\n') if x.strip()]:
      (t,f)=l.split(' ')
      if not f in data: data[f]=[]
      if not t in data[f]: data[f].append(t)
  all_ok = True
  for f in data:
    for s in invalid_status:
      if len([1 for x in s if x in data[f]])>1:
        print "%s: %s" % (f, ', '.join([status_map[x] for x in data[f]]))
        all_ok = False
  return all_ok
def process(repo, pr):
  if not check_commits_files(repo, pr): return False
  return True

if __name__ == "__main__":
  parser = OptionParser(usage="%prog <pull-request-id>")
  parser.add_option("-r", "--repository", dest="repository", help="Github Repositoy name e.g. cms-sw/cmssw.", type=str, default="cms-sw/cmssw")
  opts, args = parser.parse_args()

  if len(args) != 1: parser.error("Too many/few arguments")
  if not process(opts.repository, args[0]): sys.exit(1)

