#!/bin/bash -ex
CMS_BOT_DIR=$(dirname $0)
case $CMS_BOT_DIR in /*) ;; *) CMS_BOT_DIR=$(pwd)/${CMS_BOT_DIR} ;; esac
export JENKINS_PREFIX_STR=$(echo "${JENKINS_URL}" | sed 's|jenkins/*$||;s|.*/||')
PULL_REQUEST=$1
export USER_CODE_CHECKS=$2
BUILD_NUMBER=$3
DRY_RUN=$4
REPOSITORY=$5
if [ "X${REPOSITORY}" = "X" ] ; then
  REPOSITORY="cms-sw/cmssw"
fi
REPO_USER=$(echo ${REPOSITORY} | sed 's|/.*||')
if [ "$BUILD_NUMBER" = "" ] ; then BUILD_NUMBER=$(date +%s); fi
NUM_PROC=$(getconf _NPROCESSORS_ONLN)
case $(hostname) in lxplus* ) let NUM_PROC=$NUM_PROC/2 ;; esac
if [ $NUM_PROC = "0" ] ; then NUM_PROC=1; fi
cd $CMSSW_BASE
curl -s -L https://patch-diff.githubusercontent.com/raw/${REPOSITORY}/pull/${PULL_REQUEST}.patch | grep '^diff --git ' | sed 's|.* a/||;s|  *b/.*||' | sort | uniq > $CMSSW_BASE/all-code-checks-files.txt
grep -v '^[^/]*/[^/]*/test/' $CMSSW_BASE/all-code-checks-files.txt > $CMSSW_BASE/code-checks-files.txt          || true
grep -v '^[^/]*/[^/]*/data/' $CMSSW_BASE/code-checks-files.txt     > $CMSSW_BASE/filename-code-checks-files.txt || true
$CMS_BOT_DIR/cms-filename-checks.py $CMSSW_BASE/filename-code-checks-files.txt $CMSSW_RELEASE_BASE/src > $CMSSW_BASE/invalid-filenames.txt || true
echo "Changed files:"
cat $CMSSW_BASE/code-checks-files.txt
echo ""
#If we have any non-tests changed files
if [ -s $CMSSW_BASE/code-checks-files.txt ] ; then
  git clone --depth 1 git@github.com:cms-sw/cmssw-config
  mv config/SCRAM config/SCRAM.orig
  mv cmssw-config/SCRAM config/SCRAM
  /cvmfs/cms-ib.cern.ch/jenkins-env/git-tools/git-cms-checkout-topic -u ${REPO_USER}:${PULL_REQUEST} 2>&1 | tee cms-checkout-topic.log
  scram build -j $NUM_PROC code-checks USER_CODE_CHECKS_FILE="$CMSSW_BASE/code-checks-files.txt"  2>&1 | tee code-checks.log
  rm -rf ${CMSSW_BASE}/upload
  mv ${CMSSW_BASE}/tmp/${SCRAM_ARCH}/code-checks-logs ${CMSSW_BASE}/upload
  mv cms-checkout-topic.log ${CMSSW_BASE}/upload/
  mv code-checks.log ${CMSSW_BASE}/upload/
  cd $CMSSW_BASE/src
  git diff > ${CMSSW_BASE}/upload/git-diff.patch
else
  mkdir ${CMSSW_BASE}/upload
  touch ${CMSSW_BASE}/upload/git-diff.patch ${CMSSW_BASE}/upload/git-diff.patch
fi
mv $CMSSW_BASE/*.txt ${CMSSW_BASE}/upload/
source $CMS_BOT_DIR/jenkins-artifacts
send_jenkins_artifacts ${CMSSW_BASE}/upload/ pr-code-checks/${REPO_USER}-PR-${PULL_REQUEST}/${BUILD_NUMBER}
RES="+code-checks"
HOW_TO_RUN=""
if [ -s ${CMSSW_BASE}/upload/git-diff.patch ] ; then
  RES="-code-checks"
  HOW_TO_RUN="@N@@N@Code check has found code style and quality issues which could be resolved by applying a patch in https://cmssdt.cern.ch/SDT/${JENKINS_PREFIX_STR}code-checks/${REPO_USER}-PR-${PULL_REQUEST}/${BUILD_NUMBER}/git-diff.patch"
  HOW_TO_RUN="${HOW_TO_RUN}@N@e.g. \`curl https://cmssdt.cern.ch/SDT/${JENKINS_PREFIX_STR}code-checks/${REPO_USER}-PR-${PULL_REQUEST}/${BUILD_NUMBER}/git-diff.patch | patch -p1\`"
  HOW_TO_RUN="${HOW_TO_RUN}@N@@N@You can run \`scram build code-checks\` to apply code checks directly"
fi
MSG="${RES}@N@@N@Logs: https://cmssdt.cern.ch/SDT/${JENKINS_PREFIX_STR}code-checks/${REPO_USER}-PR-${PULL_REQUEST}/${BUILD_NUMBER}"
${CMS_BOT_DIR}/comment-gh-pr $DRY_RUN -r ${REPOSITORY} -p $PULL_REQUEST -m "${MSG}${HOW_TO_RUN}"
