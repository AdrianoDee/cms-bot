#!/bin/bash -ex
RELEASE_CYCLE=$1
THRESHOLD_TIME=""
[ "X$2" = "X" ] || THRESHOLD_TIME="--threshold $2"
voms-proxy-init
WORKSPACE="${WORKSPACE-$PWD}"

CMS_BOT_DIR=$(dirname $0)
case $CMS_BOT_DIR in /*) ;; *) CMS_BOT_DIR=$(pwd)/${CMS_BOT_DIR} ;; esac

cd $WORKSPACE
rm -f $WORKSPACE/error

if [ ! -d das_results ] ; then
  git clone git@github.com:cms-sw/cms-sw.github.io.git das_results
fi
if [ "X$RELEASE_CYCLE" = "X" ] ; then
  RELEASE_CYCLE=$(grep -v DISABLED=1 $CMS_BOT_DIR/config.map | grep -v NO_IB | sed 's|.*RELEASE_QUEUE=||;s|;.*||' | cut -d_ -f1-3 | sed 's|$|_X|' | sort | uniq)
  if [ "X$RELEASE_CYCLE" = "X" ] ; then
    echo "Unable to find and release cycle in config.map"
    exit 1
  fi
fi

QUERIES=""
for cyc in $RELEASE_CYCLE ; do
  rel_path=$(scram list -c ${cyc} | grep '_X_' | tail -1 | sed 's|^.* ||')
  if [ "X$rel_path" != "X" ] ; then
    RELEASE_ARCH=$(ls $rel_path/lib/)
    RELEASE_VER=$(basename $rel_path)
    scram -a $RELEASE_ARCH project -n $RELEASE_VER $rel_path
    pushd $WORKSPACE/$RELEASE_VER
      MATRIX_OPT=$(PYTHONPATH=$CMS_BOT_DIR python -c "from RelValArgs import GetMatrixOptions; print GetMatrixOptions('${RELEASE_VER}','${RELEASE_ARCH}')" | sed 's| --command .*||;s|--job-reports||')
      (set +x ; eval `scram runtime -sh` ; set -x; runTheMatrix.py ${MATRIX_OPT} --dryRun -j 8 | grep 'das_client' | sed "s/.*--query *.file /file /;s|'.*||" > $WORKSPACE/$cyc.txt)
    popd
    rm -rf $WORKSPACE/$RELEASE_VER
    QUERIES="--query $cyc=$cyc.txt $QUERIES"
  fi
done

cd $WORKSPACE
if [ "X$QUERIES" != "X" ] ; then
  PYTHONPATH=$CMS_BOT_DIR  $CMS_BOT_DIR/das-utils/das_cache.py ${THRESHOLD_TIME} ${QUERIES} --store $WORKSPACE/das_results/das_queries || touch $WORKSPACE/error
  pushd $WORKSPACE/das_results
    git add das_queries
    if [ $(git diff --name-only origin/master | wc -l) -gt 0 ] ; then
      git commit -a -m "Updated das queries"
      git pull --rebase
      git push origin
    fi
  popd
fi

if [ -e $WORKSPACE/error ] ; then
  exit 1
fi

