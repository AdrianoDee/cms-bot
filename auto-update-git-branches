#!/bin/sh -ex
# Updates a branch by doing the following:
# - switch to the target branch
# - Merge the source branch but keep anything on the development branch
#   in case of conflicts.
# - Update the target branch. 
function updateBranch()
{
  SOURCE_BRANCH=$1
  TARGET_BRANCH=$2
  git clean -fdx
  git reset --hard origin/$TARGET_BRANCH
  git clean -fdx
  git merge --no-ff -X ours origin/$SOURCE_BRANCH
  git commit --amend -m "Merge $SOURCE_BRANCH into $TARGET_BRANCH."
  if [ "X`git diff --name-only HEAD origin/$TARGET_BRANCH | tail -1`" != "X" ]; then
    git push origin HEAD:$TARGET_BRANCH
  fi
}

# Update CMSSW
# Clone once
SCRIPT_PATH="`dirname \"$0\"`"
SCRIPT_PATH="`(cd \"$SCRIPT_PATH\" && pwd)`"
WORKSPACE="${WORKSPACE-$PWD}"

for repo in `ls $SCRIPT_PATH/forward-ports` ; do
  echo "Working on cms-sw/$repo ..."
  cd "$WORKSPACE"
  rm -rf $repo
  git clone git@github.com:cms-sw/$repo
  cd $repo
  if [ X$HOME = X ]; then
    git config user.email 'cmsbuild@cern.ch'
    git config user.name  'CMS Build'
  fi
  git fetch origin
  for release in `ls $SCRIPT_PATH/forward-ports/$repo`; do
    echo "Forward porting release $release"
    grep 'CMSSW_' $SCRIPT_PATH/forward-ports/$repo/$release | while read line ; do
      [ "X$line" = "X" ] && continue
      (updateBranch $line) || true
    done
  done
done
