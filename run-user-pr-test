#!/bin/bash -ex
cd $WORKSPACE
rm -rf * || true
mkdir $WORKSPACE/upload
REPO_DIR=$CMS_BOT_DIR/repos/$(echo $REPOSITORY | tr '-' '_')
git clone https://github.com/${REPOSITORY} userrepo
if [ "X${PULL_REQUEST}" != "X" ] ; then
  curl -s -L https://patch-diff.githubusercontent.com/raw/${REPOSITORY}/pull/${PULL_REQUEST}.patch | \
     grep '^diff --git ' | sed 's|.* a/||;s|  *b/.*||' | sort | uniq > $WORKSPACE/upload/changed-files.txt
  cat $WORKSPACE/upload/changed-files.txt
  cd userrepo
  git fetch origin pull/${PULL_REQUEST}/head:CHANGES_${PULL_REQUEST}
  git merge CHANGES_${PULL_REQUEST}
  ERR=0
  COMMIT=$($CMS_BOT_DIR/process-pull-request -c -r ${REPOSITORY} ${PULL_REQUEST})
  $CMS_BOT_DIR/modify_comment.py -r $REPOSITORY \
    -t JENKINS_TEST_URL \
    -m "https://cmssdt.cern.ch/${JENKINS_PREFIX}/job/${JOB_NAME}/${BUILD_NUMBER}/console  Started: $(date '+%Y/%m/%d %H:%M')" $PULL_REQUEST || true
else
  cd userrepo
fi
voms-proxy-init -voms=cms
${REPO_DIR}/run-pr-tests > $WORKSPACE/upload/run.log 2>&1 || ERR=1
source $CMS_BOT_DIR/jenkins-artifacts

UPLOAD_SIZE=$(du -s -m $WORKSPACE/upload | sed 's|\s.*$||')
RESULT_LOG="$WORKSPACE/upload/full-results.txt"
touch ${RESULT_LOG}
if [ $UPLOAD_SIZE -gt 2048 ] ; then
  echo "-1\nTested at: ${COMMIT}\n\nUpload size exceeded the max size limit of 2048MB\n" > ${RESULT_LOG}
else
  if [ $ERR = 0 ] ; then
    echo -e "+1\nTested at: ${COMMIT}\n" >> ${RESULT_LOG}
  else
    echo -e "-1\nTested at: ${COMMIT}\n" >> ${RESULT_LOG}
  fi
  UPDIR=$(grep '^ *JENKINS_UPLOAD_DIRECTORY=' $REPO_DIR/repo_config.py | sed 's|^.*JENKINS_UPLOAD_DIRECTORY=||;s|["]||g' || true)
  if [ "X$UPDIR" = "X" ] ; then UPDIR="${JOB_NAME}/${PULL_REQUEST}/${BUILD_NUMBER}" ; fi
  echo -e "Test logs are available at:\nhttps://cmssdt.cern.ch/SDT/${JENKINS_PREFIX}-artifacts/${UPDIR}" >> ${RESULT_LOG}
  send_jenkins_artifacts ${WORKSPACE}/upload/ ${UPDIR}/
fi

JOB_SUMMARY_LOG="${WORKSPACE}/summary.txt"
if [ -f ${JOB_SUMMARY_LOG} ] ; then
  cat ${JOB_SUMMARY_LOG} >> ${RESULT_LOG}
fi
if [ "X${PULL_REQUEST}" != "X" ] ; then
  $WORKSPACE/cms-bot/comment-gh-pr -r $REPOSITORY -p ${PULL_REQUEST} -R ${RESULT_LOG}
else
  NOTIFY_EMAIL=$(grep '^ *JENKINS_NOTIFICATION_EMAIL=' $REPO_DIR/repo_config.py | sed 's|^.*JENKINS_NOTIFICATION_EMAIL=||;s|["]||g' || true)
  if [ "X${NOTIFY_EMAIL}" != "X" ] ; then
    cat ${RESULT_LOG} | mail -s "[Jenkins]: $REPOSITORY tests finished" "${NOTIFY_EMAIL}"
  fi
fi

